name: Build and Deploy to Azure Web App

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm install

    - name: Set up environment variables
      run: |
        echo "NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}" >> $GITHUB_ENV
        echo "CLERK_SECRET_KEY=${{ secrets.CLERK_SECRET_KEY }}" >> $GITHUB_ENV

    - name: Run tests
      run: npm test

    - name: Build project
      run: npm run build
      env:
        NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
        CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}

    - name: Capture timestamp
      id: timestamp
      run: echo "timestamp=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

    - name: Azure CLI Login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}

    - name: Docker login to Azure Container Registry
      run: az acr login -n tasksyncfrontend

    - name: Build the Docker image
      run: docker build . -t tasksyncfrontend.azurecr.io/task-sync:latest

    - name: Tag image with timestamp
      run: docker tag tasksyncfrontend.azurecr.io/task-sync:latest tasksyncfrontend.azurecr.io/task-sync:build-${{ env.timestamp }}

    - name: Push Docker images to ACR
      run: |
        docker push tasksyncfrontend.azurecr.io/task-sync:latest
        docker push tasksyncfrontend.azurecr.io/task-sync:build-${{ env.timestamp }}

    - name: Update Azure Web App to use the new image
      run: |
        az webapp config container set \
          --name task-sync \
          --resource-group task-sync \
          --docker-custom-image-name tasksyncfrontend.azurecr.io/task-sync:build-${{ env.timestamp }} \
          --output none

    - name: Enable Continuous Deployment
      run: az webapp deployment container config --name task-sync --resource-group task-sync --enable-cd true

    - name: Azure logout
      run: az logout
